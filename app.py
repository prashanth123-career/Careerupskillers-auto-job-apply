import streamlit as st
import urllib.parse

# ----------------- LANGUAGE SUPPORT -----------------
LANGUAGES = {
    "English": "en",
    "Hindi": "hi",
    "Mandarin": "zh",
}

TRANSLATIONS = {
    "en": {
        "title": "CareerUpskillers | AI Job Hub",
        "tagline": "Your AI-powered career launchpad",
        "description": "Smart Job Search | Interview Prep | Free Certifications",
        "job_finder": "Job Finder",
        "interview_prep": "Interview Preparation",
        "free_courses": "Free Courses",
        "find_jobs": "Find Jobs",
        "generate_link": "Generate Interview Prep Link",
        "find_courses": "Find Courses",
        "job_title": "Job Title / Keywords",
        "location": "Preferred Location",
        "country": "Country",
        "experience": "Experience Level",
        "date_posted": "Date Posted",
        "search_course": "Search Course / Skill / Job Title",
        "experience_options": ["Any", "Entry", "Mid", "Senior", "Executive"],
        "date_posted_options": ["Any time", "Past month", "Past week", "Past 24 hours"],
    },
    "hi": {
        "title": "рдХреИрд░рд┐рдпрд░ рдЕрдкрд╕реНрдХрд┐рд▓рд░реНрд╕ | рдПрдЖрдИ рдЬреЙрдм рд╣рдм",
        "tagline": "рдЖрдкрдХрд╛ рдПрдЖрдИ-рд╕рдВрдЪрд╛рд▓рд┐рдд рдХрд░рд┐рдпрд░ рд▓реЙрдиреНрдЪрдкреИрдб",
        "description": "рд╕реНрдорд╛рд░реНрдЯ рдЬреЙрдм рд╕рд░реНрдЪ | рд╕рд╛рдХреНрд╖рд╛рддреНрдХрд╛рд░ рддреИрдпрд╛рд░реА | рдореБрдлреНрдд рдкреНрд░рдорд╛рдгрдкрддреНрд░",
        "job_finder": "рдЬреЙрдм рдЦреЛрдЬрдХ",
        "interview_prep": "рд╕рд╛рдХреНрд╖рд╛рддреНрдХрд╛рд░ рддреИрдпрд╛рд░реА",
        "free_courses": "рдореБрдлреНрдд рдкрд╛рдареНрдпрдХреНрд░рдо",
        "find_jobs": "рдиреМрдХрд░рд┐рдпрд╛рдБ рдЦреЛрдЬреЗрдВ",
        "generate_link": "рд╕рд╛рдХреНрд╖рд╛рддреНрдХрд╛рд░ рддреИрдпрд╛рд░реА рд▓рд┐рдВрдХ рдмрдирд╛рдПрдБ",
        "find_courses": "рдкрд╛рдареНрдпрдХреНрд░рдо рдЦреЛрдЬреЗрдВ",
        "job_title": "рдиреМрдХрд░реА рд╢реАрд░реНрд╖рдХ / рдХреАрд╡рд░реНрдб",
        "location": "рдкрд╕рдВрджреАрджрд╛ рд╕реНрдерд╛рди",
        "country": "рджреЗрд╢",
        "experience": "рдЕрдиреБрднрд╡ рд╕реНрддрд░",
        "date_posted": "рдкреЛрд╕реНрдЯ рдХреА рддрд╛рд░реАрдЦ",
        "search_course": "рдкрд╛рдареНрдпрдХреНрд░рдо / рдХреМрд╢рд▓ / рдиреМрдХрд░реА рд╢реАрд░реНрд╖рдХ рдЦреЛрдЬреЗрдВ",
        "experience_options": ["рдХреЛрдИ рднреА", "рдкреНрд░рд╛рд░рдВрднрд┐рдХ", "рдордзреНрдп", "рд╡рд░рд┐рд╖реНрда", "рдХрд╛рд░реНрдпрдХрд╛рд░реА"],
        "date_posted_options": ["рдХрднреА рднреА", "рдкрд┐рдЫрд▓рд╛ рдорд╣реАрдирд╛", "рдкрд┐рдЫрд▓рд╛ рд╕рдкреНрддрд╛рд╣", "рдкрд┐рдЫрд▓реЗ 24 рдШрдВрдЯреЗ"],
    },
    "zh": {
        "title": "CareerUpskillers | AI шБМф╕Ъх╣│хП░",
        "tagline": "цВих╝АхРпшБМф╕ЪчФЯц╢пчЪД AI хКйцЙЛ",
        "description": "цЩ║шГ╜цЙ╛х╖еф╜Ь | щЭвшпХхЗЖхдЗ | хЕНш┤╣шпБф╣жшп╛чиЛ",
        "job_finder": "шБМф╜НцРЬч┤в",
        "interview_prep": "щЭвшпХхЗЖхдЗ",
        "free_courses": "хЕНш┤╣шп╛чиЛ",
        "find_jobs": "цЯецЙ╛х╖еф╜Ь",
        "generate_link": "чФЯцИРщЭвшпХхЗЖхдЗщУ╛цОе",
        "find_courses": "цЯецЙ╛шп╛чиЛ",
        "job_title": "шБМф╜НхРНчз░ / хЕ│щФошпН",
        "location": "щжЦщАЙхЬ░чВ╣",
        "country": "хЫ╜хо╢",
        "experience": "ч╗ПщкМц░┤х╣│",
        "date_posted": "хПСх╕ГцЧ╢щЧ┤",
        "search_course": "шп╛чиЛ / цКАшГ╜ / шБМф╜НцРЬч┤в",
        "experience_options": ["ф╗╗ф╜Х", "хИЭч║з", "ф╕нч║з", "щлШч║з", "ф╕Ухо╢"],
        "date_posted_options": ["ф╗╗ф╜ХцЧ╢щЧ┤", "ш┐ЗхО╗ф╕Аф╕кцЬИ", "ш┐ЗхО╗ф╕АхСи", "ш┐ЗхО╗24х░ПцЧ╢"]
    }
}

# ----------------- SETUP -----------------
st.set_page_config(page_title="CareerUpskillers | AI Job Hub", page_icon="ЁЯМЯ", layout="centered")
lang = st.sidebar.selectbox("Select Language", list(LANGUAGES.keys()), index=0)
t = TRANSLATIONS.get(LANGUAGES[lang], TRANSLATIONS["en"])

st.markdown("""
    <style>
        #MainMenu {visibility: hidden;}
        footer {visibility: hidden;}
        header {visibility: hidden;}
    </style>
""", unsafe_allow_html=True)

# ----------------- BRANDING -----------------
st.markdown(f"""
<div style='text-align:center; padding:10px 0;'>
    <h1 style='color:#1f2937;'>ЁЯЪА {t["title"]}</h1>
    <h4 style='color:#374151;'>{t["tagline"]}</h4>
    <p style='font-size:16px;'>{t["description"]}</p>
</div>
""", unsafe_allow_html=True)

# ----------------- TABS -----------------
tab1, tab2, tab3 = st.tabs([f"ЁЯМР {t['job_finder']}", f"ЁЯОп {t['interview_prep']}", f"ЁЯОУ {t['free_courses']}"])

# --------------- SMART MAPPINGS ---------------
time_map = {
    "Any time": "",
    "Past month": "r2592000",
    "Past week": "r604800",
    "Past 24 hours": "r86400"
}

exp_map = {
    "Any": "",
    "Entry": "2",
    "Mid": "3",
    "Senior": "4",
    "Executive": "5"
}

google_search = lambda query, extra="": f"https://www.google.com/search?q={urllib.parse.quote_plus(query)}{extra}"
youtube_search = lambda query: google_search(query, "+site:youtube.com")
forum_search = lambda query: google_search(query, "+forum")

# ----------------- TAB 1: JOB FINDER -----------------
with tab1:
    st.header(f"ЁЯМР {t['job_finder']}")
    keyword = st.text_input(t["job_title"], "Data Scientist")
    location = st.text_input(t["location"], "Remote")
    experience = st.selectbox(t["experience"], t["experience_options"])
    date_posted = st.selectbox(t["date_posted"], t["date_posted_options"])
    country = st.selectbox(t["country"], ["India", "USA"])
    if st.button(t["find_jobs"]):
        d_filter = time_map.get(date_posted, "")
        e_filter = exp_map.get(experience, "")
        st.markdown(f"ЁЯФЧ Job Links for **{country}**")
        if country == "India":
            st.markdown(f"[LinkedIn](https://www.linkedin.com/jobs/search/?keywords={urllib.parse.quote(keyword)}&location={urllib.parse.quote(location)}&f_TPR={d_filter}&f_E={e_filter})")
        if country == "USA":
            st.markdown(f"[LinkedIn](https://www.linkedin.com/jobs/search/?keywords={urllib.parse.quote(keyword)}&location={urllib.parse.quote(location)}&f_TPR={d_filter}&f_E={e_filter})")
        st.markdown(f"[Google Jobs](https://www.google.com/search?q={urllib.parse.quote(keyword + ' jobs in ' + location)})")

# ----------------- TAB 2: INTERVIEW PREPARATION -----------------
with tab2:
    st.header(f"ЁЯОп {t['interview_prep']}")
    role = st.text_input(t["job_title"], "Data Analyst", key="int_role")
    prep_type = st.selectbox("Preparation Type", ["Technical Questions", "Behavioral Questions"])
    exp_level = st.selectbox(t["experience"], t["experience_options"])
    company = st.text_input("Target Company (optional)", "")
    if st.button(t["generate_link"]):
        query = f"{role} {prep_type} {exp_level} {company}"
        st.markdown(f"[PDF Guides]({google_search(query, '+filetype:pdf')})")
        st.markdown(f"[YouTube]({youtube_search(query)})")
        st.markdown(f"[Forums]({forum_search(query)})")

# ----------------- TAB 3: FREE COURSES -----------------
with tab3:
    st.header(f"ЁЯОУ {t['free_courses']}")
    search = st.text_input(t["search_course"], "AI for Business")
    if st.button(t["find_courses"]):
        links = {
            "Google": f"https://grow.google/certificates/?q={urllib.parse.quote_plus(search)}",
            "IBM": f"https://skillsbuild.org/learn?search={urllib.parse.quote_plus(search)}",
            "AWS": f"https://explore.skillbuilder.aws/learn?searchTerm={urllib.parse.quote_plus(search)}",
            "Coursera": f"https://www.coursera.org/search?query={urllib.parse.quote_plus(search)}&price=1",
            "YouTube": f"https://www.youtube.com/results?search_query={urllib.parse.quote_plus(search)}"
        }
        for name, url in links.items():
            st.markdown(f"[{name} тЖТ]({url})")

# ----------------- FOOTER -----------------
st.markdown("""
<hr>
<div style='text-align:center; color:gray;'>
  ЁЯЪА Built by <b>CareerUpskillers</b> тАв 
  <a href='https://linkedin.com/company/careerupskillers' target='_blank'>LinkedIn</a>
</div>
""", unsafe_allow_html=True)
