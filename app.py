import streamlit as st
import urllib.parse

# ----------------- LANGUAGE SUPPORT -----------------
LANGUAGES = {
    "English": "en",
    # Indian Languages (22 Official Languages)
    "Assamese": "as",
    "Bengali": "bn",
    "Bodo": "brx",
    "Dogri": "doi",
    "Gujarati": "gu",
    "Hindi": "hi",
    "Kannada": "kn",
    "Kashmiri": "ks",
    "Konkani": "kok",
    "Maithili": "mai",
    "Malayalam": "ml",
    "Manipuri": "mni",
    "Marathi": "mr",
    "Nepali": "ne",
    "Odia": "or",
    "Punjabi": "pa",
    "Santhali": "sat",
    "Sindhi": "sd",
    "Tamil": "ta",
    "Telugu": "te",
    "Urdu": "ur",
    # International Languages from mentioned countries
    "French": "fr",  # Canada
    "German": "de",  # Germany
    "Arabic": "ar",  # UAE
    "Spanish": "es",  # USA (optional)
}

# Translation dictionary (expanded for more Indian languages)
TRANSLATIONS = {
    "en": {
        "title": "CareerUpskillers | AI Job Hub",
        "tagline": "Your AI-powered career launchpad",
        "description": "Smart Job Search | Interview Prep | Free Certifications",
        "job_finder": "Job Finder",
        "interview_prep": "Interview Preparation",
        "free_courses": "Free Courses",
        "find_jobs": "Find Jobs",
        "generate_link": "Generate Interview Prep Link",
        "find_courses": "Find Courses",
        "job_title": "Job Title / Keywords",
        "location": "Preferred Location",
        "country": "Country",
        "experience": "Experience Level",
        "date_posted": "Date Posted",
        "search_course": "Search Course / Skill / Job Title",
    },
    "hi": {
        "title": "рдХреИрд░рд┐рдпрд░ рдЕрдкрд╕реНрдХрд┐рд▓рд░реНрд╕ | рдПрдЖрдИ рдЬреЙрдм рд╣рдм",
        "tagline": "рдЖрдкрдХрд╛ рдПрдЖрдИ-рд╕рдВрдЪрд╛рд▓рд┐рдд рдХрд░рд┐рдпрд░ рд▓реЙрдиреНрдЪрдкреИрдб",
        "description": "рд╕реНрдорд╛рд░реНрдЯ рдЬреЙрдм рд╕рд░реНрдЪ | рд╕рд╛рдХреНрд╖рд╛рддреНрдХрд╛рд░ рддреИрдпрд╛рд░реА | рдореБрдлреНрдд рдкреНрд░рдорд╛рдгрдкрддреНрд░",
        "job_finder": "рдЬреЙрдм рдЦреЛрдЬрдХ",
        "interview_prep": "рд╕рд╛рдХреНрд╖рд╛рддреНрдХрд╛рд░ рддреИрдпрд╛рд░реА",
        "free_courses": "рдореБрдлреНрдд рдкрд╛рдареНрдпрдХреНрд░рдо",
        "find_jobs": "рдиреМрдХрд░рд┐рдпрд╛рдБ рдЦреЛрдЬреЗрдВ",
        "generate_link": "рд╕рд╛рдХреНрд╖рд╛рддреНрдХрд╛рд░ рддреИрдпрд╛рд░реА рд▓рд┐рдВрдХ рдмрдирд╛рдПрдБ",
        "find_courses": "рдкрд╛рдареНрдпрдХреНрд░рдо рдЦреЛрдЬреЗрдВ",
        "job_title": "рдиреМрдХрд░реА рд╢реАрд░реНрд╖рдХ / рдХреАрд╡рд░реНрдб",
        "location": "рдкрд╕рдВрджреАрджрд╛ рд╕реНрдерд╛рди",
        "country": "рджреЗрд╢",
        "experience": "рдЕрдиреБрднрд╡ рд╕реНрддрд░",
        "date_posted": "рдкреЛрд╕реНрдЯ рдХреА рддрд╛рд░реАрдЦ",
        "search_course": "рдкрд╛рдареНрдпрдХреНрд░рдо / рдХреМрд╢рд▓ / рдиреМрдХрд░реА рд╢реАрд░реНрд╖рдХ рдЦреЛрдЬреЗрдВ",
    },
    "ta": {
        "title": "роХро░ро┐ропро░рпН роЕрокрпНро╕рпНроХро┐ро▓ро░рпНро╕рпН | роПроР ро╡рпЗро▓рпИ роорпИропроорпН",
        "tagline": "роЙроЩрпНроХро│рпН роПроР-роЗропроХрпНроХрокрпНрокроЯрпНроЯ родрпКро┤ро┐ро▓рпН родрпКроЯроХрпНроХрокрпНрокрпБро│рпНро│ро┐",
        "description": "рокрпБродрпНродро┐роЪро╛ро▓ро┐ ро╡рпЗро▓рпИ родрпЗроЯро▓рпН | роирпЗро░рпНроХро╛рогро▓рпН родропро╛ро░ро┐рокрпНрокрпБ | роЗро▓ро╡роЪ роЪро╛ройрпНро▒ро┐родро┤рпНроХро│рпН",
        "job_finder": "ро╡рпЗро▓рпИ родрпЗроЯрпБрокро╡ро░рпН",
        "interview_prep": "роирпЗро░рпНроХро╛рогро▓рпН родропро╛ро░ро┐рокрпНрокрпБ",
        "free_courses": "роЗро▓ро╡роЪ рокроЯро┐рокрпНрокрпБроХро│рпН",
        "find_jobs": "ро╡рпЗро▓рпИроХро│рпИродрпН родрпЗроЯрпБ",
        "generate_link": "роирпЗро░рпНроХро╛рогро▓рпН родропро╛ро░ро┐рокрпНрокрпБ роЗрогрпИрокрпНрокрпИ роЙро░рпБро╡ро╛роХрпНроХрпБ",
        "find_courses": "рокроЯро┐рокрпНрокрпБроХро│рпИродрпН родрпЗроЯрпБ",
        "job_title": "ро╡рпЗро▓рпИ родро▓рпИрокрпНрокрпБ / роорпБроХрпНроХро┐роп роЪрпКро▒рпНроХро│рпН",
        "location": "ро╡ро┐ро░рпБрокрпНрокрооро╛рой роЗроЯроорпН",
        "country": "роиро╛роЯрпБ",
        "experience": "роЕройрпБрокро╡ роиро┐ро▓рпИ",
        "date_posted": "рокродро┐ро╡рпБ родрпЗродро┐",
        "search_course": "рокроЯро┐рокрпНрокрпБ / родро┐ро▒ройрпН / ро╡рпЗро▓рпИ родро▓рпИрокрпНрокрпБ родрпЗроЯрпБ",
    },
    "te": {
        "title": "р░Хр▒Жр░░р▒Ар░░р▒Н р░Ер░кр▒НтАМр░╕р▒Нр░Хр░┐р░▓р░░р▒Нр░╕р▒Н | р░Пр░Р р░Ьр░╛р░мр▒Н р░╣р░мр▒Н",
        "tagline": "р░ор▒А р░Пр░Р-р░╢р░Хр▒Нр░др░┐р░др▒Л р░Хр▒Вр░бр░┐р░и р░Хр▒Жр░░р▒Ар░░р▒Н р░▓р░╛р░Вр░Ър▒НтАМр░кр▒Нр░пр░╛р░бр▒Н",
        "description": "р░╕р▒Нр░ор░╛р░░р▒Нр░Яр▒Н р░Ьр░╛р░мр▒Н р░╕р▒Жр░░р▒Нр░Ър▒Н | р░Зр░Вр░Яр░░р▒Нр░╡р▒Нр░пр▒В р░кр▒Нр░░р░┐р░кр░░р▒Зр░╖р░ир▒Н | р░Йр░Ър░┐р░д р░╕р░░р▒Нр░Яр░┐р░лр░┐р░Хр▒Жр░Яр▒Нр░▓р▒Б",
        "job_finder": "р░Ьр░╛р░мр▒Н р░лр▒Ир░Вр░бр░░р▒Н",
        "interview_prep": "р░Зр░Вр░Яр░░р▒Нр░╡р▒Нр░пр▒В р░кр▒Нр░░р░┐р░кр░░р▒Зр░╖р░ир▒Н",
        "free_courses": "р░Йр░Ър░┐р░д р░Хр▒Лр░░р▒Нр░╕р▒Бр░▓р▒Б",
        "find_jobs": "р░Йр░жр▒Нр░пр▒Лр░Чр░╛р░▓р░ир▒Б р░Хр░ир▒Бр░Чр▒Кр░ир░Вр░бр░┐",
        "generate_link": "р░Зр░Вр░Яр░░р▒Нр░╡р▒Нр░пр▒В р░кр▒Нр░░р░┐р░кр░░р▒Зр░╖р░ир▒Н р░▓р░┐р░Вр░Хр▒НтАМр░ир▒Б р░░р▒Вр░кр▒Кр░Вр░жр░┐р░Вр░Ър░Вр░бр░┐",
        "find_courses": "р░Хр▒Лр░░р▒Нр░╕р▒Бр░▓р░ир▒Б р░Хр░ир▒Бр░Чр▒Кр░ир░Вр░бр░┐",
        "job_title": "р░Йр░жр▒Нр░пр▒Лр░Ч р░╢р▒Ар░░р▒Нр░╖р░┐р░Х / р░Хр▒Ар░▓р░Х р░кр░жр░╛р░▓р▒Б",
        "location": "р░кр▒Нр░░р░╛р░зр░╛р░ир▒Нр░п р░╕р▒Нр░ер░╛р░ир░В",
        "country": "р░жр▒Зр░╢р░В",
        "experience": "р░Ер░ир▒Бр░нр░╡ р░╕р▒Нр░ер░╛р░пр░┐",
        "date_posted": "р░кр▒Лр░╕р▒Нр░Яр▒Н р░Ър▒Зр░╕р░┐р░и р░др▒Зр░жр▒А",
        "search_course": "р░Хр▒Лр░░р▒Нр░╕р▒Б / р░ир▒Ир░кр▒Бр░гр▒Нр░пр░В / р░Йр░жр▒Нр░пр▒Лр░Ч р░╢р▒Ар░░р▒Нр░╖р░┐р░Хр░ир▒Б р░╢р▒Лр░зр░┐р░Вр░Ър░Вр░бр░┐",
    },
    "ml": {
        "title": "р┤Хр┤░р┤┐р┤пр╡╝ р┤Ер┤кр╡НтАМр┤╕р╡Нр┤Хр┤┐р┤▓р╡Нр┤▓р╡Зр┤┤р╡НтАМр┤╕р╡Н | р┤Ор┤Р р┤Ьр╡Лр┤мр╡Н р┤╣р┤мр╡Н",
        "tagline": "р┤ир┤┐р┤ир╡Нр┤▒р╡Ж р┤Ор┤Р-р┤╢р┤Хр╡Нр┤др┤┐р┤пр╡Бр┤│р╡Нр┤│ р┤Хр┤░р┤┐р┤пр╡╝ р┤▓р╡Лр┤Юр╡Нр┤Ър╡Нр┤кр┤╛р┤бр╡Н",
        "description": "р┤╕р╡Нр┤ор┤╛р╡╝р┤Яр╡Нр┤Яр╡Н р┤Ьр╡Лр┤мр╡Н р┤╕р╡Жр╡╝р┤Ър╡Нр┤Ър╡Н | р┤Зр┤ир╡Нр┤▒р╡╝ р╡НтАМр┤╕р╡╝р┤╡р╡Нр┤пр╡В р┤кр╡Нр┤░р┤┐р┤кр╡Нр┤кр┤▒р╡Зр┤╖р╡╗ | р┤╕р╡Чр┤Ьр┤ир╡Нр┤п р┤╕р╡╝р┤Яр╡Нр┤Яр┤┐р┤лр┤┐р┤Хр╡Нр┤Хр┤▒р╡Нр┤▒р╡Бр┤Хр╡╛",
        "job_finder": "р┤Ьр╡Лр┤мр╡Н р┤лр╡Ир╡╗р┤бр╡╝",
        "interview_prep": "р┤Зр┤ир╡Нр┤▒р╡╝р┤╡р╡Нр┤пр╡В р┤кр╡Нр┤░р┤┐р┤кр╡Нр┤кр┤▒р╡Зр┤╖р╡╗",
        "free_courses": "р┤╕р╡Чр┤Ьр┤ир╡Нр┤п р┤Хр╡Лр┤┤р╡НтАМр┤╕р╡Бр┤Хр╡╛",
        "find_jobs": "р┤Ьр╡Лр┤▓р┤┐р┤Хр╡╛ р┤Хр┤гр╡Нр┤Яр╡Жр┤др╡Нр┤др╡Бр┤Х",
        "generate_link": "р┤Зр┤ир╡Нр┤▒р╡╝р┤╡р╡Нр┤пр╡В р┤кр╡Нр┤░р┤┐р┤кр╡Нр┤кр┤▒р╡Зр┤╖р╡╗ р┤▓р┤┐р┤Щр╡Нр┤Хр╡Н р┤╕р╡Гр┤╖р╡Нр┤Яр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х",
        "find_courses": "р┤Хр╡Лр┤┤р╡НтАМр┤╕р╡Бр┤Хр╡╛ р┤Хр┤гр╡Нр┤Яр╡Жр┤др╡Нр┤др╡Бр┤Х",
        "job_title": "р┤Ьр╡Лр┤▓р┤┐ р┤╢р╡Ар╡╝р┤╖р┤Хр┤В / р┤Хр╡Ар┤╡р╡Зр┤бр╡Бр┤Хр╡╛",
        "location": "р┤др┤┐р┤░р┤Юр╡Нр┤Юр╡Жр┤Яр╡Бр┤др╡Нр┤д р┤╕р╡Нр┤ер┤▓р┤В",
        "country": "р┤░р┤╛р┤Ьр╡Нр┤пр┤В",
        "experience": "р┤кр┤░р┤┐р┤Ър┤п р┤ир┤┐р┤▓р┤╡р┤╛р┤░р┤В",
        "date_posted": "р┤кр╡Лр┤╕р╡Нр┤▒р╡Нр┤▒р╡Н р┤Ър╡Жр┤пр╡Нр┤д р┤др╡Ар┤пр┤др┤┐",
        "search_course": "р┤Хр╡Лр┤┤р╡НтАМр┤╕р╡Н / р┤Хр┤┤р┤┐р┤╡р╡Н / р┤Ьр╡Лр┤▓р┤┐ р┤╢р╡Ар╡╝р┤╖р┤Хр┤В р┤др┤┐р┤░р┤пр╡Бр┤Х",
    },
    # Add translations for other languages (Assamese, Bengali, etc.) similarly
    "de": {
        "title": "CareerUpskillers | KI-Job-Hub",
        "tagline": "Ihr KI-gest├╝tzter Karrierestart",
        "description": "Intelligente Jobsuche | Interviewvorbereitung | Kostenlose Zertifikate",
        "job_finder": "Jobfinder",
        "interview_prep": "Interviewvorbereitung",
        "free_courses": "Kostenlose Kurse",
        "find_jobs": "Jobs finden",
        "generate_link": "Interview-Vorbereitungslink erstellen",
        "find_courses": "Kurse finden",
        "job_title": "Jobtitel / Schl├╝sselw├╢rter",
        "location": "Bevorzugter Standort",
        "country": "Land",
        "experience": "Erfahrungsstufe",
        "date_posted": "Ver├╢ffentlichungsdatum",
        "search_course": "Kurs / F├дhigkeit / Jobtitel suchen",
    },
    # Add more languages as needed
}

# ----------------- SETUP -----------------
st.set_page_config(page_title="CareerUpskillers | AI Job Hub", page_icon="ЁЯМЯ", layout="centered")

# Language selection
lang = st.sidebar.selectbox("Select Language / рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ / Sprache w├дhlen", list(LANGUAGES.keys()), index=0)
t = TRANSLATIONS.get(LANGUAGES[lang], TRANSLATIONS["en"])  # Default to English if lang not found

# Update page title dynamically
st.set_page_config(page_title=t["title"], page_icon="ЁЯМЯ", layout="centered")

# Hide Streamlit default elements
st.markdown("""
    <style>
        #MainMenu {visibility: hidden;}
        footer {visibility: hidden;}
        header {visibility: hidden;}
    </style>
""", unsafe_allow_html=True)

# ----------------- BRANDING -----------------
st.markdown(f"""
<div style='text-align:center; padding:10px 0;'>
    <h1 style='color:#1f2937;'>ЁЯЪА CareerUpskillers</h1>
    <h4 style='color:#374151;'>{t["tagline"]}</h4>
    <p style='font-size:16px;'>{t["description"]}</p>
</div>
""", unsafe_allow_html=True)

# ----------------- TABS -----------------
tab1, tab2, tab3 = st.tabs([f"ЁЯМР {t['job_finder']}", f"ЁЯОп {t['interview_prep']}", f"ЁЯОУ {t['free_courses']}"])

# ----------------- TAB 1: JOB FINDER -----------------
with tab1:
    st.header(f"ЁЯМР {t['job_finder']}")

    PORTALS_BY_COUNTRY = {
        "India": [
            ("LinkedIn", lambda k, l, e, d: f"https://www.linkedin.com/jobs/search/?keywords={urllib.parse.quote(k)}&location={urllib.parse.quote(l)}&f_TPR={d}&f_E={e}"),
            ("Naukri", lambda k, l, e, d: f"https://www.naukri.com/{k.lower().replace(' ', '-')}-jobs-in-{l.lower().replace(' ', '-') if l != 'Remote' else 'india'}"),
            ("Indeed", lambda k, l, e, d: f"https://www.indeed.co.in/jobs?q={urllib.parse.quote(k)}&l={urllib.parse.quote(l)}"),
            ("Shine", lambda k, l, e, d: f"https://www.shine.com/job-search/{k.lower().replace(' ', '-')}-jobs-in-{l.lower().replace(' ', '-')}")
        ],
        "USA": [
            ("LinkedIn", lambda k, l, e, d: f"https://www.linkedin.com/jobs/search/?keywords={urllib.parse.quote(k)}&location={urllib.parse.quote(l)}&f_TPR={d}&f_E={e}"),
            ("USAJobs", lambda k, l, e, d: f"https://www.usajobs.gov/Search/Results?k={urllib.parse.quote(k)}&l={urllib.parse.quote(l)}"),
            ("Indeed", lambda k, l, e, d: f"https://www.indeed.com/jobs?q={urllib.parse.quote(k)}&l={urllib.parse.quote(l)}")
        ]
    }

    with st.form("job_form"):
        col1, col2 = st.columns(2)
        with col1:
            keyword = st.text_input(t["job_title"], "Data Scientist")
            location = st.text_input(t["location"], "Remote")
            country = st.selectbox(t["country"], list(PORTALS_BY_COUNTRY.keys()))
        with col2:
            experience = st.selectbox(t["experience"], ["Any", "Entry", "Mid", "Senior", "Executive"])
            date_posted = st.selectbox(t["date_posted"], ["Any time", "Past month", "Past week", "Past 24 hours"])
        submitted = st.form_submit_button(f"ЁЯФН {t['find_jobs']}")

    if submitted:
        time_map = {
            "Any time": "", "Past month": "r2592000",
            "Past week": "r604800", "Past 24 hours": "r86400"
        }
        exp_map = {
            "Any": "", "Entry": "2", "Mid": "3", "Senior": "4", "Executive": "5"
        }
        d_filter = time_map[date_posted]
        e_filter = exp_map[experience]

        st.subheader(f"ЁЯФЧ Job Search Links in {country}")
        for name, url_func in PORTALS_BY_COUNTRY[country]:
            url = url_func(keyword, location, e_filter, d_filter)
            st.markdown(f"""
            <a href="{{url}}" target="_blank" style="display:inline-block; padding:10px 20px; background:#4CAF50; color:white; border-radius:5px; text-decoration:none; margin-bottom:5px;">
                ЁЯФН Search on {name}
            </a>
            """.format(url=url), unsafe_allow_html=True)

# ----------------- TAB 2: INTERVIEW PREPARATION -----------------
with tab2:
    st.header(f"ЁЯОп {t['interview_prep']}")

    with st.form("interview_form"):
        col1, col2 = st.columns(2)
        with col1:
            role = st.text_input(t["job_title"], "Data Analyst")
            country = st.selectbox(t["country"], ["India", "USA", "UK", "Canada", "Germany", "UAE", "Australia"])
        with col2:
            platform = st.selectbox("Choose Platform", [
                "LeetCode", "HackerRank", "GeeksforGeeks", "Glassdoor", "Pramp", 
                "IndiaBix", "AmbitionBox", "Final Round AI", "Big Interview", "iScalePro"
            ])
        interview_submit = st.form_submit_button(f"ЁЯФЧ {t['generate_link']}")

    if interview_submit:
        query = urllib.parse.quote_plus(role + " " + country)
        PLATFORM_LINKS = {
            "LeetCode": f"https://leetcode.com/problemset/all/?search={query}",
            "HackerRank": f"https://www.hackerrank.com/interview/interview-preparation-kit",
            "GeeksforGeeks": f"https://www.geeksforgeeks.org/?s={query}",
            "Glassdoor": f"https://www.glassdoor.com/Interview/{query}-interview-questions-SRCH_KO0,{len(query)}.htm",
            "Pramp": f"https://www.pramp.com/#interview-prep",
            "IndiaBix": f"https://www.indiabix.com/interview/questions-and-answers/?search={query}",
            "AmbitionBox": f"https://www.ambitionbox.com/interviews?title={query}",
            "Final Round AI": "https://www.finalroundai.com/ai-mock-interview",
            "Big Interview": "https://www.biginterview.com/",
            "iScalePro": "https://www.iscalepro.com/jobseekers/"
        }

        link = PLATFORM_LINKS.get(platform)
        if link:
            st.markdown(f"""
            <a href="{link}" target="_blank" style="display:inline-block; padding:12px 24px; background:#2563eb; color:white; border-radius:5px; text-decoration:none;">
                ЁЯЪА Prep on {platform}
            </a>
            """, unsafe_allow_html=True)

# ----------------- TAB 3: FREE COURSES -----------------
with tab3:
    st.header(f"ЁЯОУ {t['free_courses']}")

    with st.form("course_form"):
        search = st.text_input(t["search_course"], "AI for Business")
        course_submit = st.form_submit_button(f"ЁЯОп {t['find_courses']}")

    if course_submit:
        query = urllib.parse.quote_plus(search)

        st.subheader("ЁЯза Tech Giants")
        tech = [
            ("Google", f"https://grow.google/certificates/?q={query}"),
            ("IBM", f"https://skillsbuild.org/learn?search={query}"),
            ("Amazon AWS", f"https://explore.skillbuilder.aws/learn?searchTerm={query}"),
            ("Microsoft (via LinkedIn)", "https://www.linkedin.com/learning/"),
            ("Meta", f"https://www.facebook.com/business/learn/courses?search={query}")
        ]
        for name, url in tech:
            st.markdown(f"<a href='{url}' target='_blank' style='display:block; background:#3b82f6; color:white; padding:10px; border-radius:5px; margin-bottom:5px;'>ЁЯУШ {name}</a>", unsafe_allow_html=True)

        # Add more sections as in your original code...

# ----------------- FOOTER -----------------
st.markdown("""
<hr style='margin-top:40px;'>
<div style='text-align:center; font-size:16px; color:gray;'>
    ЁЯЪА Powered by <strong>CareerUpskillers</strong> |
    <a href='https://www.linkedin.com/company/careerupskillers' target='_blank'>LinkedIn</a> тАв 
    <a href='https://twitter.com/careerupskill' target='_blank'>Twitter</a> тАв 
    <a href='https://instagram.com/careerupskillers' target='_blank'>Instagram</a> тАв 
    <a href='https://youtube.com/@careerupskillers' target='_blank'>YouTube</a>
</div>
""", unsafe_allow_html=True)
